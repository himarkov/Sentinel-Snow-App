<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>incident</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="incident">work_notesVALCHANGES^correlation_idISNOTEMPTY^EQ<item endquery="false" field="work_notes" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="correlation_id" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>add_work_note_to_sentinel</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var sentinelIncidents = new SentinelIncidents();
	var appUtils = new AppUtils();
	var environmentId = appUtils.getEnvironmentId(current);
	
	appUtils.log(JSON.stringify(environmentId));

	var gr = new GlideRecord('x_556309_microsoft_workspaces_config');
	gr.addQuery('environment_id', environmentId);
	gr.query();
	if(gr.next()) {
		var environment = gr;
	}
	else {
		appUtils.log('ERROR: environment ' + environmentId + 'not found!');
	}

	try {
        var msg = current.work_notes.getJournalEntry(1);
        //Filtering out Sentinel incidents already added to work notes 
        if (msg.toLowerCase().indexOf('<div class="snow">') === -1) {
			msg = '<div class="snow">' + msg + '</div>';
			var httpStatus = sentinelIncidents.addIncidentComments(environment, current.correlation_id, msg);
			if(httpStatus != 201) {
				appUtils.log('ERROR: incident ' + current.number  + '\n' + httpStatus + ' - Comment not added to Sentinel\n' + msg);
			}
		}
        
	}
	catch (ex) {
		var message = ex.message;
		appUtils.log('ERROR: ' + message);
            }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>sebmolendijk@hotmail.com</sys_created_by>
        <sys_created_on>2021-01-20 19:31:51</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e877d6822fb56010aab2d5ccf699b621</sys_id>
        <sys_mod_count>35</sys_mod_count>
        <sys_name>add_work_note_to_sentinel</sys_name>
        <sys_overrides/>
        <sys_package display_value="Microsoft Azure Sentinel" source="x_556309_microsoft">04ced1802f7d2010aab2d5ccf699b616</sys_package>
        <sys_policy/>
        <sys_scope display_value="Microsoft Azure Sentinel">04ced1802f7d2010aab2d5ccf699b616</sys_scope>
        <sys_update_name>sys_script_e877d6822fb56010aab2d5ccf699b621</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-03-30 13:48:52</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=e877d6822fb56010aab2d5ccf699b621"/>
</record_update>
